#version: "3.0"
name: 'userfusion'

services:
  mysql:
    container_name: uf-mysql
    image: 'mysql:latest'
    command: [ "--max_connections=1000" ]
    environment:
      - 'MYSQL_DATABASE=mydatabase'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    ports:
      - '64109:3306'
    volumes:
      - ./sql/mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
#  oracle:
#    image: 'gvenzl/oracle-free:latest'
#    environment:
#      - 'ORACLE_PASSWORD=secret'
#    ports:
#      - '1521'
  postgres:
    container_name: uf-postgres
    image: 'postgres:latest'
    command: ["-c", "max_prepared_transactions=1000", "-c", "max_connections=3000"]
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '59530:5432'
    volumes:
      - ./sql/postgres/pg_create_and_fill_tables.sql:/docker-entrypoint-initdb.d/init.sql
  sqlserver:
    container_name: uf-sqlserver
    build:
      context: .
      dockerfile: sql/sqlserver/Dockerfile
    ports:
      - '64110:1433'
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "verYs3cret" -C -Q "CREATE DATABASE TestDB"
      interval: 10s
      timeout: 3s
      retries: 10
  # Cloud-config-server
  config:
    container_name: uf-config
    build:
      context: ..
      dockerfile: docker/builder/components/Dockerfile
      args:
        BUILD_PATH: user-fusion-cloud-config-server
    volumes:
      - ./configs:/config
    environment:
      - SERVER_PORT=80
      - SERVER_ADDRESS=0.0.0.0
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH-LOCATIONS=file:///config/
      - SPRING_PROFILES_ACTIVE=native
  # Backend container
  backend:
    container_name: uf-backend
    build:
      context: ..
      dockerfile: docker/builder/components/Dockerfile
      args:
        BUILD_PATH: user-fusion-backend
    ports:
      - "8078:80"
      - "5005:5005"
    volumes:
      - ./logs:/app/logs:rw
    depends_on:
      sqlserver:
        condition:
          service_healthy
      mysql:
        condition:
          service_healthy
    environment:
      - SERVER_PORT=80
      - SERVER_ADDRESS=0.0.0.0
      - SPRING_MAIN_BANNER_MODE=off